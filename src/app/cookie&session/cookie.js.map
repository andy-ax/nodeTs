{"version":3,"file":"cookie.js","sourceRoot":"","sources":["cookie.ts"],"names":[],"mappings":"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","sourcesContent":["import { extend } from '../../utils/utils';\r\nconst queryString = require('querystring');\r\n\r\ntype Option = {\r\n    maxAge: number;\r\n    domain: string;\r\n    path: string;\r\n    expires?: {\r\n        toUTCString: () => string;\r\n    };\r\n    httpOnly: any;\r\n    secure?: any;\r\n};\r\n\r\ntype anyObject = {\r\n    [key: string]: any;\r\n}\r\n\r\nexport class Cookie {\r\n    static option: Option;\r\n    static cookies: any = {};\r\n\r\n    req: any;\r\n    res: any;\r\n    cookie: any[] = [];\r\n\r\n    constructor(req: Request, res: Response) {\r\n        this.req = req;\r\n        this.res = res;\r\n    }\r\n\r\n    /**\r\n     * 设置cookie头\r\n     */\r\n    setCookie() {\r\n        if (this.cookie.length === 1) {\r\n            this.res.setHeader('Set-Cookie', this.cookie[0]);\r\n        } else {\r\n            this.res.setHeader('Set-Cookie', this.cookie);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检查设定的cookie是否存在\r\n     * @param key\r\n     */\r\n    checkCookie(key: string) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.req.mount.cookie[key] !== undefined) {\r\n                resolve(this);\r\n            } else {\r\n                reject(this);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 检查全部 cookie\r\n     */\r\n    checkAllCookie() {\r\n        let success: Function;\r\n        let fail: Function;\r\n        for (let i in Cookie.cookies) {\r\n            success = Cookie.cookies[i].success;\r\n            fail = Cookie.cookies[i].fail;\r\n            this.checkCookie(i).then(self => {\r\n                success(self);\r\n            }).catch(self => {\r\n                fail(self);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * option设置\r\n     * @param {object} opt\r\n     */\r\n    static setOption(opt: Option) {\r\n        Cookie.option = opt;\r\n    }\r\n\r\n    /**\r\n     * 存储已配置的cookie\r\n     * @param {string} key\r\n     * @param {function} success\r\n     * @param {function} fail\r\n     */\r\n    static cookieConfig(key: string, success: Function, fail: Function) {\r\n        Cookie.cookies[key] = {\r\n            success,\r\n            fail\r\n        };\r\n    };\r\n\r\n    /**\r\n     * 将cookie切成对象\r\n     * @param {string} cookie\r\n     * @return {object}\r\n     */\r\n    static parseCookie(cookie: any): anyObject {\r\n        cookie = cookie.replace(/\\s+/g, '');\r\n        return queryString.parse(cookie, ';', '=');\r\n    };\r\n\r\n    /**\r\n     * 创建cookie\r\n     * @param {string} name\r\n     * @param  val\r\n     * @param {object} [opt]\r\n     * @return {string}\r\n     */\r\n    static buildCookie(name: string, val: any, opt?: Option) {\r\n        let pairs = [name + '=' + queryString.escape(val)];\r\n        opt ? extend(Cookie.option, opt) : opt = Cookie.option;\r\n        try {\r\n            if (opt.maxAge) pairs.push('Max-Age=' + opt.maxAge);\r\n            if (opt.domain) pairs.push('Domain=' + opt.domain);\r\n            if (opt.path) pairs.push('Path=' + opt.path);\r\n            if (opt.expires) pairs.push('Expires=' + opt.expires.toUTCString());\r\n            if (opt.httpOnly) pairs.push('HttpOnly');\r\n            if (opt.secure) pairs.push('Secure');\r\n            return pairs.join('; ');\r\n        } catch (e) {\r\n            throw new Error('must set option!!!');\r\n        }\r\n    };\r\n}\r\n"]}