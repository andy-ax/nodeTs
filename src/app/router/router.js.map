{"version":3,"file":"router.js","sourceRoot":"","sources":["router.ts"],"names":[],"mappings":"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","sourcesContent":["import {RouterHelper} from './routerHelper';\r\nimport {Cookie, File, Cache, Session, DbStorage, user} from '..';\r\nimport {Handle404} from \"../handle404/handle404\";\r\nconst handle404 = Handle404.handle404;\r\nexport class Router extends RouterHelper{\r\n    constructor() {\r\n        super();\r\n        this.addRouteReg();\r\n        this.getRouter();\r\n        this.postRouter();\r\n    }\r\n\r\n    addRouteReg() {\r\n        //添加路由映射正则\r\n        this.addRule(':username',/:username/g,'([0-9a-zA-Z_]+)');\r\n        this.addRule(':room',/:room/g,'room(\\\\\\d+)');\r\n        this.addRule(':css',/:css/g,'([0-9a-zA-Z_]+\\\\\\.css)');\r\n        this.addRule(':js',/:js/g,'([0-9a-zA-Z_]+\\\\\\.js)');\r\n        this.addRule(':img',/:img/g,'([0-9a-zA-Z_]+\\\\\\.(?:png|jpg))');\r\n        this.addRule(':font',/:font/g,'([0-9a-zA-Z_]+\\\\\\.(?:eot|svg|ttf|woff))');\r\n    }\r\n\r\n    getRouter() {\r\n        // 加载主页\r\n        this.get('/', function (req: Request, res: Response) {\r\n            const cookie = new Cookie(req, res);\r\n            cookie.checkAllCookie();\r\n            File.readFile('./src/assets/html/index.html').then(file => {\r\n                cookie.setCookie();\r\n                res.writeHeader(200, 'OK');\r\n                res.end(file);\r\n            }).catch(err => {\r\n                if (err.code === 'ENOENT') {\r\n                    Handle404.handle404(res);\r\n                }\r\n            })\r\n        });\r\n        // 加载登录页\r\n        this.get('/login', function (req: Request, res: Response) {\r\n            const cookie = new Cookie(req, res);\r\n            cookie.checkAllCookie();\r\n            File.readFile('./src/assets/html/login.html').then(file => {\r\n                cookie.setCookie();\r\n                res.writeHeader(200, 'OK');\r\n                res.end(file);\r\n            }).catch(err => {\r\n                if (err.code === 'ENOENT') {\r\n                    Handle404.handle404(res);\r\n                }\r\n            })\r\n        });\r\n        // 读取图片\r\n        this.get('/img/:img', function (req: Request, res: Response, img: string) {\r\n            Cache.checkModified('./src/assets/images/' + img, req, res).then((file) => {\r\n                if (file) {\r\n                    res.writeHeader(200, 'OK');\r\n                    res.end(file);\r\n                } else {\r\n                    res.writeHeader(304, 'Not Modified');\r\n                    res.end();\r\n                }\r\n            }).catch((err) => {\r\n                if (err.code === 'ENOENT') {\r\n                    Handle404.handle404(res);\r\n                }\r\n            })\r\n        });\r\n\r\n        // 读取css\r\n        this.get('/css/:css', function (req: Request, res: Response, css: string) {\r\n            Cache.checkModified('./src/assets/css/' + css, req, res).then((file) => {\r\n                if (file) {\r\n                    res.writeHeader(200, 'OK');\r\n                    res.end(file);\r\n                } else {\r\n                    res.writeHeader(304, 'Not Modified');\r\n                    res.end();\r\n                }\r\n            }).catch((err) => {\r\n                if (err.code === 'ENOENT') {\r\n                    Handle404.handle404(res);\r\n                }\r\n            })\r\n        });\r\n\r\n        // 读取js\r\n        this.get('/js/:js', function (req: Request, res: Response, js: string) {\r\n            Cache.checkModified('./src/assets/js/' + js, req, res).then((file) => {\r\n                if (file) {\r\n                    res.writeHeader(200, 'OK');\r\n                    res.end(file);\r\n                } else {\r\n                    res.writeHeader(304, 'Not Modified');\r\n                    res.end();\r\n                }\r\n            }).catch((err) => {\r\n                if (err.code === 'ENOENT') {\r\n                    Handle404.handle404(res);\r\n                }\r\n            })\r\n        });\r\n\r\n        // 读取font\r\n        this.get('/font/:font', function (req: Request, res: Response, font: string) {\r\n            Cache.checkModified('./src/assets/font/' + font, req, res).then((file) => {\r\n                if (file) {\r\n                    res.writeHeader(200, 'OK');\r\n                    res.end(file);\r\n                } else {\r\n                    res.writeHeader(304, 'Not Modified');\r\n                    res.end();\r\n                }\r\n            }).catch((err) => {\r\n                if (err.code === 'ENOENT') {\r\n                    handle404(res);\r\n                }\r\n            })\r\n        });\r\n\r\n        // 查询session\r\n        this.get('/session', function (req: Request, res: Response) {\r\n            const cookie = new Cookie(req, res);\r\n            const sessionKey = 's_id';\r\n            cookie.checkCookie(sessionKey).then(() => {\r\n                return Session.checkSession(req.mount.cookie[sessionKey]);\r\n            }).then((session: any) => {\r\n                const regExpExecArray = DbStorage.users.find({name: session.user})\r\n                    .exec((err: Error, datas: user[]) => {\r\n                    if (!err && datas.length === 1 && datas[0].name === session.user) {\r\n                        cookie.cookie.push(Cookie.buildCookie('s_id',\r\n                            session.s_id,\r\n                            {maxAge: session.cookie.expire}\r\n                        ));\r\n                        cookie.setCookie();\r\n\r\n                        res.setHeader('content-type', 'application/json');\r\n                        res.writeHeader(200, 'OK');\r\n                        // 返回u_info json\r\n                        let u_info = datas[0].u_info;\r\n                        res.end(JSON.stringify(u_info));\r\n                        return;\r\n                    }\r\n                    handle404(res);\r\n                });\r\n            }).catch(() => {\r\n                handle404(res);\r\n            })\r\n        });\r\n    }\r\n\r\n    postRouter() {\r\n        this.post('/login', function (req: Request, res: Response) {\r\n            let str = '';\r\n            File.getRequestData(req).then((data: any) => {\r\n                if (data.name && data.password) {\r\n\r\n                }\r\n            });\r\n        });\r\n        this.post('/register', function (req: Request, res: Response) {\r\n            File.getRequestData(req).then((data: any) => {\r\n                if (data.name && data.password) {\r\n                    const user = DbStorage.users;\r\n                    debugger\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n"]}