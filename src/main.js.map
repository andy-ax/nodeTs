{"version":3,"file":"main.js","sourceRoot":"","sources":["main.ts"],"names":[],"mappings":";;AAAA;;GAEG;AACH,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,yCAAwC;AACxC,yCAAoC;AACpC,+BAAgE;AAEhE,MAAM,IAAI;IAEN;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,YAAM,EAAE,CAAC;QAC3B,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,IAAI;QACA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzC,MAAM,CAAC,YAAI,EAAE,WAAG,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEpD,0BAA0B;QAC1B,mBAAa,CAAC,MAAM,EAAE,CAAC;QAEvB,gCAAgC;QAChC,IAAI,YAAM,EAAE,CAAC;QACb,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC/B,CAAC;IAED,WAAW,CAAC,OAAe,EAAE,QAAiB;QAC1C,MAAM,MAAM,GAAG,aAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAClC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC/D,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC;QACnB,IAAI,MAAM,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAClE,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;SACpD;aAAM;YACH,eAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;SACjC;IACL,CAAC;IAED,WAAW;QACP,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAA;IACzC,CAAC;CACJ;AAED,IAAI,IAAI,EAAE,CAAC","sourcesContent":["/**\r\n *\r\n */\r\nconst http = require('http');\r\nimport {PORT, URL} from './model/model';\r\nimport {parse} from './utils/utils';\r\nimport {Cookie, CookieSession, Handle404, Router,} from './app';\r\n\r\nclass Main {\r\n    router: Router;\r\n    constructor() {\r\n        this.router = new Router();\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        http.createServer(this.httpRequest.bind(this))\r\n            .listen(PORT, URL, this.httpConnect.bind(this));\r\n\r\n        // cookie & session config\r\n        CookieSession.config();\r\n\r\n        // route map & follow-up actions\r\n        new Router();\r\n        console.log('run success');\r\n    }\r\n\r\n    httpRequest(request:Request, response:Response) {\r\n        const urlObj = parse(request.url);\r\n        const result = this.router.checkPath(request, urlObj.pathname);\r\n        request.mount = {};\r\n        if (result) {\r\n            request.mount.cookie = Cookie.parseCookie(request.headers.cookie);\r\n            result.action(request, response, ...result.args);\r\n        } else {\r\n            Handle404.handle404(response);\r\n        }\r\n    }\r\n\r\n    httpConnect() {\r\n        console.log('connection is success!')\r\n    }\r\n}\r\n\r\nnew Main();\r\n"]}