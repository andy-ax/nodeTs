{"version":3,"file":"main.js","sourceRoot":"","sources":["main.ts"],"names":[],"mappings":";;AAAA;;GAEG;AACH,mCAAmC;AACnC,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,4BAA4B;AAC5B,yCAA2C;AAC3C,yCAAyC;AACzC,WAAW;AACX,cAAc;AACd,cAAc;AACd,iBAAiB;AACjB,qBAAqB;AACrB,kBAAkB;AAElB,MAAM,IAAI;IACN,kBAAkB;IAClB,kBAAkB;IAClB;QACI,8BAA8B;QAC9B,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,IAAI;QACA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzC,MAAM,CAAC,YAAI,EAAE,WAAG,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEpD,0BAA0B;QAC1B,0BAA0B;QAE1B,+BAA+B;QAC/B,gBAAgB;IACpB,CAAC;IAED,WAAW,CAAC,OAAe,EAAE,QAAiB;QAC1C,+DAA+D;QAC/D,kEAAkE;QAClE,gBAAgB;QAChB,mEAAmE;QACnE,EAAE;QACF,wDAAwD;QACxD,WAAW;QACX,qCAAqC;QACrC,IAAI;IACR,CAAC;IAED,WAAW;QACP,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAA;IACzC,CAAC;CACJ;AAED,IAAI,IAAI,EAAE,CAAC","sourcesContent":["/**\r\n *\r\n */\r\n// import {http} from './node-base'\r\nconst http = require('http');\r\n// import http from '@types'\r\nimport { PORT, URL } from  './model/model';\r\n// import { parse } from './utils/utils';\r\n// import {\r\n//     Router,\r\n//     Cookie,\r\n//     Handle404,\r\n//     CookieSession,\r\n// } from './app';\r\n\r\nclass Main {\r\n    // router: Router;\r\n    // cookie: Cookie;\r\n    constructor() {\r\n        // this.router = new Router();\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        http.createServer(this.httpRequest.bind(this))\r\n            .listen(PORT, URL, this.httpConnect.bind(this));\r\n\r\n        // cookie & session config\r\n        // CookieSession.config();\r\n\r\n        //route map & follow-up actions\r\n        // new Router();\r\n    }\r\n\r\n    httpRequest(request:Request, response:Response) {\r\n        // const urlObj = (request as any).urlObj = parse(request.url);\r\n        // const result = this.router.checkPath(request, urlObj.pathname);\r\n        // if (result) {\r\n        //     request.cookie = Cookie.parseCookie(request.headers.cookie);\r\n        //\r\n        //     result.action(request, response, ...result.args);\r\n        // } else {\r\n        //     Handle404.handle404(response);\r\n        // }\r\n    }\r\n\r\n    httpConnect() {\r\n        console.log('connection is success!')\r\n    }\r\n}\r\n\r\nnew Main();\r\n"]}